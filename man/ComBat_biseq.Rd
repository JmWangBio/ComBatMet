% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ComBat_biseq.r
\name{ComBat_biseq}
\alias{ComBat_biseq}
\title{Adjust for batch effects using a beta-binomial regression framework in bisulfite sequencing count data}
\usage{
ComBat_biseq(
  numCs,
  coverage,
  batch,
  group = NULL,
  covar_mod = NULL,
  full_mod = TRUE,
  shrink = FALSE,
  mean.only = FALSE,
  feature.subset.n = NULL,
  ncores = 1
)
}
\arguments{
\item{numCs}{matrix of number of methylated cytosines}

\item{coverage}{matrix of coverage}

\item{batch}{vector for batch}

\item{group}{optional vector for biological condition of interest}

\item{covar_mod}{optional model matrix representing co-variates to be included in the model}

\item{full_mod}{Boolean variable indicating whether to include biological condition of interest in the model}

\item{shrink}{Boolean variable indicating whether to apply EB-shrinkage on parameter estimation}

\item{mean.only}{Boolean variable indicating whether to apply EB-shrinkage on the estimation of dispersion effects}

\item{feature.subset.n}{number of features to use in non-parametric EB estimation, only useful when shrink equals TRUE}

\item{ncores}{number of cores to be used for parallel computing. By default, ncores is set to one.}
}
\value{
\code{ComBat_biseq} returns a batch-adjusted feature x sample count matrix, representing number
of methylated cytosines
}
\description{
ComBat-biseq fits beta-binomial regression models to the bisulfite sequencing data (i.e., coverage and cytosine counts),
calculates batch-free distributions, and maps the quantiles of the estimated distributions
to their batch-free counterparts.
}
\examples{
if (requireNamespace("methylKit", quietly = TRUE)) {
# Simulate bisulfite sequencing data
my.methylBase <- methylKit::dataSim(replicates = 8, sites = 50, treatment = c(1,1,1,1,0,0,0,0), 
percentage = 10, effect = 25, add.info = TRUE)
my.methylData <- methylKit::getData(my.methylBase[[1]])
coverage_mat <- as.matrix(my.methylData[, grep("coverage", colnames(my.methylData))])
class(coverage_mat) <- "numeric"
numCs_mat <- as.matrix(my.methylData[, grep("numCs", colnames(my.methylData))])
class(numCs_mat) <- "numeric"
batch <- c(rep(1, 4), rep(2, 4))
group <- rep(c(0, 1), 4)

# Adjust for batch effects including biological conditions
adj_numCs_mat <- ComBat_biseq(numCs = numCs_mat, coverage = coverage_mat, batch = batch, 
group = group, full_mod = TRUE)
# Adjust for batch effects without including biological conditions
adj_numCs_mat <- ComBat_biseq(numCs = numCs_mat, coverage = coverage_mat, batch = batch, 
group = group, full_mod = FALSE)
# Adjust for batch effects including biological conditions (multiple threads)
adj_numCs_mat <- ComBat_biseq(numCs = numCs_mat, coverage = coverage_mat, batch = batch, 
group = group, full_mod = TRUE, ncores = 2)
}

}
