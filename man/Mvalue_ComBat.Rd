% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Mvalue_ComBat.R
\name{Mvalue_ComBat}
\alias{Mvalue_ComBat}
\title{Adjust for batch effects in DNA methylation data by converting beta-values to M-values followed by ComBat}
\usage{
Mvalue_ComBat(
  vmat,
  dtype = c("b-value", "M-value"),
  batch,
  group = NULL,
  covar_mod = NULL,
  full_mod = TRUE,
  mean.only = FALSE,
  pseudo_beta = 1e-04,
  ref.batch = NULL
)
}
\arguments{
\item{vmat}{matrix of beta-values or M-values}

\item{dtype}{data type: beta-values or M-values; note that the input and output have the same data type.}

\item{batch}{vector for batch}

\item{group}{optional vector for biological condition of interest}

\item{covar_mod}{optional model matrix representing co-variates to be included in the model}

\item{full_mod}{Boolean variable indicating whether to include biological condition of interest in the model}

\item{mean.only}{Boolean variable indicating whether to apply EB-shrinkage on the estimation of dispersion effects}

\item{pseudo_beta}{pseudo beta-values to be used for replacing extreme 0 and 1 beta-values.
Value needs to be between 0 and 0.5. Only active when data type is beta-values.}

\item{ref.batch}{NULL by default. If given, that batch will be selected as a reference for batch correction.}
}
\value{
\code{Mvalue_ComBat} returns a feature x sample matrix with the same data type as input, adjusted for batch effects.
}
\description{
Mvalue_ComBat converts beta-values to M-values through logit-transformation,
adjusts M-values for batch effects using ComBat, and converts the adjusted M-values back to
adjusted beta-values through reverse logit-transformation.
Forward and reverse logit-transformation are omitted if M-values are provided.
}
\examples{
# Generate a random beta-value matrix
bv_mat <- matrix(runif(n = 400, min = 0, max = 1), nrow = 50, ncol = 8)
batch <- c(rep(1, 4), rep(2, 4))
group <- rep(c(0, 1), 4)

# Adjust for batch effects including biological conditions
adj_bv_mat <- Mvalue_ComBat(bv_mat, dtype = "b-value", batch = batch, group = group, full_mod = TRUE)
# Adjust for batch effects without including biological conditions
adj_bv_mat <- Mvalue_ComBat(bv_mat, dtype = "b-value", batch = batch, group = group, full_mod = FALSE)

# Generate a random M-value matrix
mv_mat <- matrix(rnorm(n = 400, mean = 0, sd = 1), nrow = 50, ncol = 8)
batch <- c(rep(1, 4), rep(2, 4))
group <- rep(c(0, 1), 4)

# Adjust for batch effects including biological conditions
adj_mv_mat <- Mvalue_ComBat(mv_mat, dtype = "M-value", batch = batch, group = group, full_mod = TRUE)
# Adjust for batch effects without including biological conditions
adj_mv_mat <- Mvalue_ComBat(mv_mat, dtype = "M-value", batch = batch, group = group, full_mod = FALSE)
}
